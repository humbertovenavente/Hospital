# SonarQube Configuration for Hospital Backend QA
# Esta configuración está diseñada para ejecutarse desde la raíz del workspace (Jenkins)
sonar.projectKey=hospital-backend-qa
sonar.projectName=Hospital Backend - QA (Java/Quarkus)
sonar.projectVersion=1.0
sonar.host.url=http://localhost:9000
sonar.token=sqa_8f9c9ffeaf833e1486015527efadabc251e75755

# Source code (desde la raíz del workspace)
sonar.sources=backend/src/main/java
sonar.java.source=17
sonar.java.binaries=backend/target/classes

# Test code (desde la raíz del workspace)
sonar.tests=backend/src/test/java
sonar.java.test.binaries=backend/target/test-classes

# JaCoCo coverage report (desde la raíz del workspace)
sonar.coverage.jacoco.xmlReportPaths=backend/target/site/jacoco/jacoco.xml

# Exclusions
sonar.exclusions=**/target/**,**/*.min.js,**/*.min.css

# Quality Gate - Deshabilitado para QA para evitar fallos en el pipeline
sonar.qualitygate.wait=false

# Configuración más permisiva para QA
sonar.java.libraries=backend/target/quarkus-app/lib/*
sonar.java.test.libraries=backend/target/test-classes

# Configuración de reglas más permisiva para QA
sonar.issue.ignore.multicriteria=e1
sonar.issue.ignore.multicriteria.e1.ruleKey=squid:S1192
sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.java

# Configuración de duplicación más permisiva para QA
sonar.cpd.java.minimumTokens=100
sonar.cpd.minimumTokens=100

# Configuración de cobertura más permisiva para QA
sonar.coverage.exclusions=**/*Test.java,**/*Test.java,**/*DTO.java,**/*Repository.java
