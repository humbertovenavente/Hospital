version: '3.8'

services:
  # Base de datos Oracle para DESARROLLO (con configuración de PRODUCCIÓN)
  oracle-dev:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    container_name: hospital-oracle-dev
    environment:
      ORACLE_PWD: Unis
      ORACLE_CHARACTERSET: AL32UTF8
    ports:
      - "1521:1521"  # Puerto estándar para desarrollo
    volumes:
      - oracle_dev_data:/opt/oracle/oradata
      - ./backend/src/main/resources/import.sql:/opt/oracle/scripts/startup/import.sql
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "Hospital3/Unis@localhost:1521/XEPDB1", "@healthcheck.sql"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Quarkus para DESARROLLO (con configuración de PRODUCCIÓN)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hospital-backend-dev
    environment:
      QUARKUS_DATASOURCE_URL: jdbc:oracle:thin:@oracle-dev:1521/XEPDB1
      QUARKUS_DATASOURCE_USERNAME: Hospital3
      QUARKUS_DATASOURCE_PASSWORD: Unis
      QUARKUS_HTTP_PORT: 8080
      QUARKUS_PROFILE: prod
    ports:
      - "8084:8080"  # Puerto de producción para desarrollo
    depends_on:
      oracle-dev:
        condition: service_healthy
    volumes:
      - ./backend/src/main/resources/application.properties:/app/config/application.properties
    restart: unless-stopped

  # Frontend Vue.js para DESARROLLO (con configuración de PRODUCCIÓN)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: hospital-frontend-dev
    environment:
      VITE_API_URL: http://localhost:8084
      NODE_ENV: production
    ports:
      - "5176:80"  # Puerto de producción para desarrollo
    depends_on:
      - backend-dev
    restart: unless-stopped

  # Nginx reverse proxy para DESARROLLO (con configuración de PRODUCCIÓN)
  nginx-dev:
    image: nginx:alpine
    container_name: hospital-nginx-dev
    ports:
      - "8085:80"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend-dev
      - backend-dev
    restart: unless-stopped

  # Monitoreo para DESARROLLO (con configuración de PRODUCCIÓN)
  prometheus-dev:
    image: prom/prometheus:latest
    container_name: hospital-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  # Grafana para dashboards en DESARROLLO
  grafana-dev:
    image: grafana/grafana:latest
    container_name: hospital-grafana-dev
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_dev_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  oracle_dev_data:
  grafana_dev_data:
